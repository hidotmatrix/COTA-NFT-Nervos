"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.loadCellsFromIndexer = void 0;
const tslib_1 = require("tslib");
const loadCellsFromIndexer = ({ CellCollector, indexer, lock, start, end, }) => (0, tslib_1.__awaiter)(void 0, void 0, void 0, function* () {
    var e_1, _a;
    const collector = new CellCollector(indexer, {
        lock: {
            code_hash: lock.codeHash,
            hash_type: lock.hashType,
            args: lock.args,
        },
        fromBlock: start,
        toBlock: end,
    });
    const cells = [];
    try {
        for (var _b = (0, tslib_1.__asyncValues)(collector.collect()), _c; _c = yield _b.next(), !_c.done;) {
            const { data, cell_output: { capacity, type }, out_point, } = _c.value;
            cells.push({
                data,
                lock,
                type: type && { codeHash: type.code_hash, hashType: type.hash_type, args: type.args },
                capacity,
                outPoint: { txHash: out_point.tx_hash, index: out_point.index },
            });
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);
        }
        finally { if (e_1) throw e_1.error; }
    }
    return cells;
});
exports.loadCellsFromIndexer = loadCellsFromIndexer;
exports.default = exports.loadCellsFromIndexer;
//# sourceMappingURL=loadCellsFromIndexer.js.map